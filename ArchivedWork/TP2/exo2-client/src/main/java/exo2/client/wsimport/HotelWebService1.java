
package exo2.client.wsimport;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "HotelWebService1", targetNamespace = "http://serveur.exo2/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface HotelWebService1 {


    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "connexionAgenceWS1", targetNamespace = "http://serveur.exo2/", className = "exo2.client.wsimport.ConnexionAgenceWS1")
    @ResponseWrapper(localName = "connexionAgenceWS1Response", targetNamespace = "http://serveur.exo2/", className = "exo2.client.wsimport.ConnexionAgenceWS1Response")
    @Action(input = "http://serveur.exo2/HotelWebService1/connexionAgenceWS1Request", output = "http://serveur.exo2/HotelWebService1/connexionAgenceWS1Response", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://serveur.exo2/HotelWebService1/connexionAgenceWS1/Fault/Exception")
    })
    public int connexionAgenceWS1(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1)
        throws Exception_Exception
    ;

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getHotelPartenaireNoms", targetNamespace = "http://serveur.exo2/", className = "exo2.client.wsimport.GetHotelPartenaireNoms")
    @ResponseWrapper(localName = "getHotelPartenaireNomsResponse", targetNamespace = "http://serveur.exo2/", className = "exo2.client.wsimport.GetHotelPartenaireNomsResponse")
    @Action(input = "http://serveur.exo2/HotelWebService1/getHotelPartenaireNomsRequest", output = "http://serveur.exo2/HotelWebService1/getHotelPartenaireNomsResponse")
    public List<String> getHotelPartenaireNoms();

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getHotelPartenaireMdps", targetNamespace = "http://serveur.exo2/", className = "exo2.client.wsimport.GetHotelPartenaireMdps")
    @ResponseWrapper(localName = "getHotelPartenaireMdpsResponse", targetNamespace = "http://serveur.exo2/", className = "exo2.client.wsimport.GetHotelPartenaireMdpsResponse")
    @Action(input = "http://serveur.exo2/HotelWebService1/getHotelPartenaireMdpsRequest", output = "http://serveur.exo2/HotelWebService1/getHotelPartenaireMdpsResponse")
    public List<String> getHotelPartenaireMdps();

    /**
     * 
     * @return
     *     returns java.util.List<exo2.client.wsimport.Agence>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getHotelPartenaires", targetNamespace = "http://serveur.exo2/", className = "exo2.client.wsimport.GetHotelPartenaires")
    @ResponseWrapper(localName = "getHotelPartenairesResponse", targetNamespace = "http://serveur.exo2/", className = "exo2.client.wsimport.GetHotelPartenairesResponse")
    @Action(input = "http://serveur.exo2/HotelWebService1/getHotelPartenairesRequest", output = "http://serveur.exo2/HotelWebService1/getHotelPartenairesResponse")
    public List<Agence> getHotelPartenaires();

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getHotelPartenaireLogins", targetNamespace = "http://serveur.exo2/", className = "exo2.client.wsimport.GetHotelPartenaireLogins")
    @ResponseWrapper(localName = "getHotelPartenaireLoginsResponse", targetNamespace = "http://serveur.exo2/", className = "exo2.client.wsimport.GetHotelPartenaireLoginsResponse")
    @Action(input = "http://serveur.exo2/HotelWebService1/getHotelPartenaireLoginsRequest", output = "http://serveur.exo2/HotelWebService1/getHotelPartenaireLoginsResponse")
    public List<String> getHotelPartenaireLogins();

    /**
     * 
     * @param arg0
     * @return
     *     returns exo2.client.wsimport.Agence
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getHotelPartenaireById", targetNamespace = "http://serveur.exo2/", className = "exo2.client.wsimport.GetHotelPartenaireById")
    @ResponseWrapper(localName = "getHotelPartenaireByIdResponse", targetNamespace = "http://serveur.exo2/", className = "exo2.client.wsimport.GetHotelPartenaireByIdResponse")
    @Action(input = "http://serveur.exo2/HotelWebService1/getHotelPartenaireByIdRequest", output = "http://serveur.exo2/HotelWebService1/getHotelPartenaireByIdResponse")
    public Agence getHotelPartenaireById(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPartenaireNomById", targetNamespace = "http://serveur.exo2/", className = "exo2.client.wsimport.GetPartenaireNomById")
    @ResponseWrapper(localName = "getPartenaireNomByIdResponse", targetNamespace = "http://serveur.exo2/", className = "exo2.client.wsimport.GetPartenaireNomByIdResponse")
    @Action(input = "http://serveur.exo2/HotelWebService1/getPartenaireNomByIdRequest", output = "http://serveur.exo2/HotelWebService1/getPartenaireNomByIdResponse")
    public String getPartenaireNomById(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getHotelNom", targetNamespace = "http://serveur.exo2/", className = "exo2.client.wsimport.GetHotelNom")
    @ResponseWrapper(localName = "getHotelNomResponse", targetNamespace = "http://serveur.exo2/", className = "exo2.client.wsimport.GetHotelNomResponse")
    @Action(input = "http://serveur.exo2/HotelWebService1/getHotelNomRequest", output = "http://serveur.exo2/HotelWebService1/getHotelNomResponse")
    public String getHotelNom();

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getHotelAdresse", targetNamespace = "http://serveur.exo2/", className = "exo2.client.wsimport.GetHotelAdresse")
    @ResponseWrapper(localName = "getHotelAdresseResponse", targetNamespace = "http://serveur.exo2/", className = "exo2.client.wsimport.GetHotelAdresseResponse")
    @Action(input = "http://serveur.exo2/HotelWebService1/getHotelAdresseRequest", output = "http://serveur.exo2/HotelWebService1/getHotelAdresseResponse")
    public String getHotelAdresse();

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg4
     * @param arg1
     * @param arg0
     * @return
     *     returns double
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getOffrePrixByIndex", targetNamespace = "http://serveur.exo2/", className = "exo2.client.wsimport.GetOffrePrixByIndex")
    @ResponseWrapper(localName = "getOffrePrixByIndexResponse", targetNamespace = "http://serveur.exo2/", className = "exo2.client.wsimport.GetOffrePrixByIndexResponse")
    @Action(input = "http://serveur.exo2/HotelWebService1/getOffrePrixByIndexRequest", output = "http://serveur.exo2/HotelWebService1/getOffrePrixByIndexResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://serveur.exo2/HotelWebService1/getOffrePrixByIndex/Fault/Exception")
    })
    public double getOffrePrixByIndex(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        int arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        int arg4)
        throws Exception_Exception
    ;

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg4
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getOffreArriveeToStringByIndex", targetNamespace = "http://serveur.exo2/", className = "exo2.client.wsimport.GetOffreArriveeToStringByIndex")
    @ResponseWrapper(localName = "getOffreArriveeToStringByIndexResponse", targetNamespace = "http://serveur.exo2/", className = "exo2.client.wsimport.GetOffreArriveeToStringByIndexResponse")
    @Action(input = "http://serveur.exo2/HotelWebService1/getOffreArriveeToStringByIndexRequest", output = "http://serveur.exo2/HotelWebService1/getOffreArriveeToStringByIndexResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://serveur.exo2/HotelWebService1/getOffreArriveeToStringByIndex/Fault/Exception")
    })
    public String getOffreArriveeToStringByIndex(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        int arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        int arg4)
        throws Exception_Exception
    ;

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg4
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getOffreIdByIndex", targetNamespace = "http://serveur.exo2/", className = "exo2.client.wsimport.GetOffreIdByIndex")
    @ResponseWrapper(localName = "getOffreIdByIndexResponse", targetNamespace = "http://serveur.exo2/", className = "exo2.client.wsimport.GetOffreIdByIndexResponse")
    @Action(input = "http://serveur.exo2/HotelWebService1/getOffreIdByIndexRequest", output = "http://serveur.exo2/HotelWebService1/getOffreIdByIndexResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://serveur.exo2/HotelWebService1/getOffreIdByIndex/Fault/Exception")
    })
    public int getOffreIdByIndex(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        int arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        int arg4)
        throws Exception_Exception
    ;

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg4
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getOffreDepartToStringByIndex", targetNamespace = "http://serveur.exo2/", className = "exo2.client.wsimport.GetOffreDepartToStringByIndex")
    @ResponseWrapper(localName = "getOffreDepartToStringByIndexResponse", targetNamespace = "http://serveur.exo2/", className = "exo2.client.wsimport.GetOffreDepartToStringByIndexResponse")
    @Action(input = "http://serveur.exo2/HotelWebService1/getOffreDepartToStringByIndexRequest", output = "http://serveur.exo2/HotelWebService1/getOffreDepartToStringByIndexResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://serveur.exo2/HotelWebService1/getOffreDepartToStringByIndex/Fault/Exception")
    })
    public String getOffreDepartToStringByIndex(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        int arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        int arg4)
        throws Exception_Exception
    ;

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg4
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getOffreChambreToStringByIndex", targetNamespace = "http://serveur.exo2/", className = "exo2.client.wsimport.GetOffreChambreToStringByIndex")
    @ResponseWrapper(localName = "getOffreChambreToStringByIndexResponse", targetNamespace = "http://serveur.exo2/", className = "exo2.client.wsimport.GetOffreChambreToStringByIndexResponse")
    @Action(input = "http://serveur.exo2/HotelWebService1/getOffreChambreToStringByIndexRequest", output = "http://serveur.exo2/HotelWebService1/getOffreChambreToStringByIndexResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://serveur.exo2/HotelWebService1/getOffreChambreToStringByIndex/Fault/Exception")
    })
    public String getOffreChambreToStringByIndex(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        int arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        int arg4)
        throws Exception_Exception
    ;

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<exo2.client.wsimport.Offre>
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "rechercheParPartenaire", targetNamespace = "http://serveur.exo2/", className = "exo2.client.wsimport.RechercheParPartenaire")
    @ResponseWrapper(localName = "rechercheParPartenaireResponse", targetNamespace = "http://serveur.exo2/", className = "exo2.client.wsimport.RechercheParPartenaireResponse")
    @Action(input = "http://serveur.exo2/HotelWebService1/rechercheParPartenaireRequest", output = "http://serveur.exo2/HotelWebService1/rechercheParPartenaireResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://serveur.exo2/HotelWebService1/rechercheParPartenaire/Fault/Exception")
    })
    public List<Offre> rechercheParPartenaire(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        int arg3)
        throws Exception_Exception
    ;

}
